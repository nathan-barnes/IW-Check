// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Blocks â€“ Grid
// stylesheets/blocks/_grid.scss
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

*,
*:before,
*:after {
  box-sizing: border-box;
}
.flex {
  display: flex;
  flex: 0 1 auto;
  justify-content: space-between;
}

.b {
  display: flex;
  flex: 0 1 auto;
  flex-wrap: wrap;
  flex-direction: row;
  align-content: flex-start;
  width: 100%;
}

.g {
  display: flex;
  flex: 0 1 auto;
  flex-wrap: wrap;
  flex-direction: row;
  align-content: flex-start;
  width: 100%;
  max-width: $grid-xs-width;
  margin: 0 auto;
  padding: 0 $grid-xs-padding;
  @media only screen and (min-width: $screen-sm-min) {
    max-width: $grid-sm-width;
    padding: 0 $grid-sm-padding;
  }
  @media only screen and (min-width: $screen-md-min) {
    max-width: $grid-md-width;
    padding: 0 $grid-md-padding;
  }
  @media only screen and (min-width: $screen-lg-min) {
    max-width: $grid-lg-width;
    padding: 0 $grid-lg-padding;
  }
  @media only screen and (min-width: $screen-xl-min) {
    max-width: $grid-xl-width;
    padding: 0 $grid-xl-padding;
  }
}
.g .g {
  width: calc(100% + 1em);
  max-width: none;
  margin-left: -$grid-gutter;
  margin-right: -$grid-gutter;
  padding: 0;
}


@media only screen {
  @for $i from 0 through $grid-columns {
    $p: percentage($i / $grid-columns);
    .g#{$i}-xs {
      flex: 0 1 auto;
      width: $p;
      max-width: $p;
      padding-left: $grid-gutter;
      padding-right: $grid-gutter;
    }
    .g#{$i}-xs-offset {
      margin-left: $p;
    }
  }
}
@media only screen and (min-width: $screen-sm-min) {
  @for $i from 0 through $grid-columns {
    $p: percentage($i / $grid-columns);
    .g#{$i}-sm {
      flex: 0 1 auto;
      width: $p;
      max-width: $p;
      padding-left: $grid-gutter;
      padding-right: $grid-gutter;
    }
    .g#{$i}-sm-offset {
      margin-left: $p;
    }
  }
}
@media only screen and (min-width: $screen-md-min) {
  @for $i from 0 through $grid-columns {
    $p: percentage($i / $grid-columns);
    .g#{$i}-md {
      flex: 0 1 auto;
      width: $p;
      max-width: $p;
      padding-left: $grid-gutter;
      padding-right: $grid-gutter;
    }
    .g#{$i}-md-offset {
      margin-left: $p;
    }
  }
}
@media only screen and (min-width: $screen-lg-min) {
  @for $i from 0 through $grid-columns {
    $p: percentage($i / $grid-columns);
    .g#{$i}-lg {
      flex: 0 1 auto;
      width: $p;
      max-width: $p;
      padding-left: $grid-gutter;
      padding-right: $grid-gutter;
    }
    .g#{$i}-lg-offset {
      margin-left: $p;
    }
  }
}
@media only screen and (min-width: $screen-xl-min) {
  @for $i from 0 through $grid-columns {
    $p: percentage($i / $grid-columns);
    .g#{$i}-xl {
      flex: 0 1 auto;
      width: $p;
      max-width: $p;
      padding-left: $grid-gutter;
      padding-right: $grid-gutter;
    }
    .g#{$i}-xl-offset {
      margin-left: $p;
    }
  }
}
